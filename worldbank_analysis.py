# -*- coding: utf-8 -*-
"""WorldBank_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AmMn4aNj47XXg-AFUzlg3Z4cdfbWLXJv

# **World Bank Data Analysis**
"""

!pip install wbgapi

# Required Libraries
import wbgapi as wb
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
sns.set(style="darkgrid")

def load_data(filename, countries):
    # Load data from the World Bank using wbgapi
    data = wb.data.DataFrame(filename,countries, time=range(2010,2020))

    # Transpose the dataframe and clean the column names
    by_year = data.T
    by_country = data
  
    return by_year, by_country

# World Bank Datasets
countries = ["IND","NGA","ETH","COD","BGD","TZA","UGA","KEN"]
by_country, by_year = load_data("EN.ATM.CO2E.KT;EG.ELC.ACCS.ZS",countries)

emissionsDf, emissionsDf_year =load_data('EN.ATM.CO2E.KT', countries)
electricityDf, electricityDf_year = load_data('EG.ELC.ACCS.ZS', countries)

"""## Datasets"""

electricityDf.head()

emissionsDf.head()

electricityDf.describe()

emissionsDf.describe()

"""# Data Visualization

## Electricity Coverage Visualization
"""

# Plot line graph
time = ['2010','2011','2012','2013','2014','2015','2016','2017','2018','2019']
plt.plot(time, electricityDf[countries[0]], label = countries[0])
plt.plot(time, electricityDf[countries[1]], label = countries[1])
plt.plot(time, electricityDf[countries[2]], label = countries[2])
plt.plot(time, electricityDf[countries[3]], label = countries[3])
plt.plot(time, electricityDf[countries[4]], label = countries[4])
plt.plot(time, electricityDf[countries[5]], label = countries[5])
plt.plot(time, electricityDf[countries[6]], label = countries[6])
plt.plot(time, electricityDf[countries[7]], label = countries[7])
# Labels and title
plt.xlabel("Years")
plt.ylabel("Electricity Coverage Rate")
plt.title("Electricity Coverage  Rate from 2010 to 2019")
plt.legend(title='Countries',title_fontsize=15,loc='center left', bbox_to_anchor=(1, 0.5))

# Bar width set up
barWidth = 0.25
# Set length of bars
bar1 = electricityDf[countries[0]]
bar2 = electricityDf[countries[1]]
bar3 = electricityDf[countries[2]]
bar4 = electricityDf[countries[3]]
bar5 = electricityDf[countries[4]]
bar6 = electricityDf[countries[5]]
bar7 = electricityDf[countries[6]]
bar8 = electricityDf[countries[7]]
# Set bar position on xaxis
r1 = np.arange(len(bar1))
r2 = [x + barWidth for x in r1]
r3 = [x + barWidth for x in r2]
r4 = [x + barWidth for x in r3]
r5 = [x + barWidth for x in r4]
r6 = [x + barWidth for x in r5]
r7 = [x + barWidth for x in r6]
r8 = [x + barWidth for x in r7]
# Plot Data
plt.bar(r1,bar1, width=barWidth, label = countries[0])
plt.bar(r2,bar2, width=barWidth, label = countries[1])
plt.bar(r3,bar3, width=barWidth, label = countries[2])
plt.bar(r4,bar4, width=barWidth, label = countries[3])

# Labels and title
plt.xlabel("Years")
plt.ylabel("Electricity Coverage")
plt.xticks([r + barWidth for r in range(len(bar1))], time)
plt.title("Electricity Coverage in India, Nigeria, Ethiopia and DRC")
# Create plot
plt.rcParams["figure.figsize"] = (15,5.5)
plt.legend(title='Countries',title_fontsize=15,loc='center left', bbox_to_anchor=(1, 0.5))
plt.show()

plt.bar(r5,bar5, width=barWidth, label = countries[4])
plt.bar(r6,bar6, width=barWidth, label = countries[5])
plt.bar(r7,bar7, width=barWidth, label = countries[6])
plt.bar(r8,bar8, width=barWidth, label = countries[7])

# Labels and title
plt.xlabel("Years")
plt.ylabel("Electricity Coverage")
plt.xticks([r + barWidth for r in range(len(bar1))], time)
plt.title("Electricity Coverage in Bangladesh, Tanzania, Uganda and Kenya")
# Create plot
plt.rcParams["figure.figsize"] = (15,5.5)
plt.legend(title='Countries',title_fontsize=15,loc='center left', bbox_to_anchor=(1, 0.5))
plt.show()

"""## CO2 Emmissions Visualization"""

# Plot line graph
time = ['2010','2011','2012','2013','2014','2015','2016','2017','2018','2019']
plt.plot(time, emissionsDf[countries[0]], label = countries[0])
plt.plot(time, emissionsDf[countries[1]], label = countries[1])
plt.plot(time, emissionsDf[countries[2]], label = countries[2])
plt.plot(time, emissionsDf[countries[3]], label = countries[3])
plt.plot(time, emissionsDf[countries[4]], label = countries[4])
plt.plot(time, emissionsDf[countries[5]], label = countries[5])
plt.plot(time, emissionsDf[countries[6]], label = countries[6])
plt.plot(time, emissionsDf[countries[7]], label = countries[7])
# Labels and title
plt.xlabel("Years")
plt.ylabel("CO2 Emission")
plt.title("CO2 emissions from 2010 to 2019")
plt.legend(title='Countries',title_fontsize=15,loc='center left', bbox_to_anchor=(1, 0.5))

# Bar width set up
barWidth = 0.25
# Set length of bars
bar2 = emissionsDf[countries[1]]
bar3 = emissionsDf[countries[2]]
bar4 = emissionsDf[countries[3]]
bar5 = emissionsDf[countries[4]]
bar6 = emissionsDf[countries[5]]
bar7 = emissionsDf[countries[6]]
bar8 = emissionsDf[countries[7]]
# Set bar position on xaxis
r1 = np.arange(len(bar1))
r2 = [x + barWidth for x in r1]
r3 = [x + barWidth for x in r2]
r4 = [x + barWidth for x in r3]
r5 = [x + barWidth for x in r4]
r6 = [x + barWidth for x in r5]
r7 = [x + barWidth for x in r6]
r8 = [x + barWidth for x in r7]
# Plot Data
plt.bar(r2,bar2, width=barWidth, label = countries[1])
plt.bar(r3,bar3, width=barWidth, label = countries[2])
plt.bar(r4,bar4, width=barWidth, label = countries[3])
plt.bar(r5,bar5, width=barWidth, label = countries[4])
plt.bar(r6,bar6, width=barWidth, label = countries[5])
plt.bar(r7,bar7, width=barWidth, label = countries[6])
plt.bar(r8,bar8, width=barWidth, label = countries[7])

# Labels and title
plt.xlabel("Years")
plt.ylabel("Unemployment Rate")
plt.xticks([r + barWidth for r in range(len(bar1))], time)
plt.title("Unemployment Rate in India, Nigeria, Ethiopia and DRC")
# Create plot
plt.rcParams["figure.figsize"] = (15,5.5)
plt.legend(title='Countries',title_fontsize=15,loc='center left', bbox_to_anchor=(1, 0.5))
plt.show()

corr = by_country.corr()
sns.heatmap(corr, annot=True, fmt='.2f')
plt.show()